<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leju.yunke.virtual.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.leju.yunke.virtual.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <association  property="role" column="role" javaType="com.leju.yunke.virtual.entity.Role">
      <result column="id" jdbcType="VARCHAR" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="code" jdbcType="VARCHAR" property="code" />
      <result column="status" jdbcType="INTEGER" property="status" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
      <result column="deleted" jdbcType="INTEGER" property="deleted" />
    </association >
  </resultMap>
  <sql id="Base_Where">
    <if test="id != null"> and id=#{id} </if>
    <if test="userName != null"> and user_name=#{userName} </if>
    <if test="password != null"> and password=#{password} </if>
    <if test="roleId != null"> and role_id=#{roleId} </if>
    <if test="createTime != null"> and create_time=#{createTime} </if>
    <if test="updateTime != null"> and update_time=#{updateTime} </if>
    <if test="deleted != null"> and deleted=#{deleted} </if>
    <if test="email != null"> and email=#{email} </if>
  </sql>
  <sql id="Base_Column_List" >
    id, user_name, password, role_id, create_time, update_time, deleted, email
  </sql>
  <select id="getByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from user where 1=1
    and user_name = #{userName}
  </select>

  <select id="getByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from user where 1=1
    and id = #{id}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.leju.yunke.virtual.entity.User" >
    insert into user (id, user_name, password,
      role_id, create_time, update_time,
      deleted, email)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{roleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{deleted,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.leju.yunke.virtual.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.leju.yunke.virtual.entity.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leju.yunke.virtual.entity.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap" parameterType="map" >
    select <include refid="Base_Column_List" /> from user where 1=1 <include refid="Base_Where" />
  </select>
  <select id="pageCount" resultType="java.lang.Integer" parameterType="map" >
    select count(1) from user where 1=1 <include refid="Base_Where" />
  </select>
  <select id="pageData" resultMap="BaseResultMap" parameterType="map" >
    select <include refid="Base_Column_List" /> from user where 1=1 <include refid="Base_Where" />
  </select>

  <select id="queryUserList" resultMap="BaseResultMap" parameterType="map" >
    select u.*,r.* from user u left join role r on u.role_id = r.id where 1=1
    <include refid="Base_Where" />

 </select>

</mapper>