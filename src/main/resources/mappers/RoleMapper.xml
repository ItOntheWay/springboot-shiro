<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leju.yunke.virtual.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.leju.yunke.virtual.entity.Role">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, name, code, status, create_time, update_time, deleted
  </sql>

  <sql id="Base_Where">
    <if test="id != null"> and id=#{id} </if>
    <if test="name != null"> and name=#{name} </if>
    <if test="code != null"> and code=#{code} </if>
    <if test="status != null"> and status=#{status} </if>
    <if test="createTime != null"> and create_time=#{createTime} </if>
    <if test="updateTime != null"> and update_time=#{updateTime} </if>
    <if test="deleted != null"> and deleted=#{deleted} </if>
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.leju.yunke.virtual.entity.Role" >
    insert into role (id, name, code,
      status, create_time, update_time,
      deleted)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.leju.yunke.virtual.entity.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.leju.yunke.virtual.entity.Role" >
    update role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leju.yunke.virtual.entity.Role" >
    update role
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap" parameterType="map" >
    select <include refid="Base_Column_List" /> from role where 1=1 <include refid="Base_Where" />
  </select>
  <select id="pageCount" resultType="java.lang.Integer" parameterType="map" >
    select count(1) from role where 1=1 <include refid="Base_Where" />
  </select>
  <select id="pageData" resultMap="BaseResultMap" parameterType="map" >
    select <include refid="Base_Column_List" /> from role where 1=1 <include refid="Base_Where" />
  </select>

  <select id="getRolesByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select r.* from user u left join role r on u.role_id = r.id where 1=1
    and u.id = #{userId}
    and r.status = 1
    and r.deleted = 0
  </select>

  <select id="queryList" resultMap="BaseResultMap" parameterType="map">
    select <include refid="Base_Column_List" /> from role where 1=1 <include refid="Base_Where" />
  </select>

  <update id="updateDeletedByPrimaryKey" parameterType="java.lang.Integer">
    update role
    set deleted = 1
    where id = #{id}
  </update>

  <select id="selectByRoleid" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select t2.role_id,t1.* from resources t1
    left join role_resources t2 on t1.id = t2.resources_id
    and t2.role_id = #{roleid}
    where t1.deleted = 0
    ORDER BY t1.create_time desc
  </select>
  <select id="select2ByRoleid" parameterType="java.lang.Integer" resultType="java.util.HashMap">
		select b.* from (select * from role_resources where role_id=#{roleid}) a
		LEFT JOIN resources b on a.resources_id=b.id
		where b.deleted = 0
		order by b.create_time desc
  </select>
</mapper>